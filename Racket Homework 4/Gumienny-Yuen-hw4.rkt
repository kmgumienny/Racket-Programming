#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 81 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 0 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 2153 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 192
(
 #"#reader(lib \"htdp-beginner-abbr-reader.ss\" \"lang\")((modname Yuen"
 #"-Gumienny-hw4) (read-case-sensitive #t) (teachpacks ()) (htdp-settin"
 #"gs #(#t constructor repeating-decimal #f #t none #f () #t)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 29 #";; Joseph Yuen jhyuen@wpi.edu"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Kamil Gumienny kmgumienny@wpi.edu"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 1"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; a Student is (make-student String String)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"email"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; interp: a Student is where"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;    - name is the name of the student"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;    - email is the email of the student"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-student"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Bob Smith\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"bhsmith@wpi.edu\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-student"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Sarah Bun\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"shbun@wpi.edu\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-student"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Luke Teller\""
0 0 24 3 1 #" "
0 0 19 3 18 #"\"lgteller@wpi.edu\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; a ListOfStudent is one of;"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;    - empty"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;    - (cons Student ListOfStudent)"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; interp: a list of students"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"BASE"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOS1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 2"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         175 4           0 0           0 28 0 17 3 19
#";; Student Template"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; fn-for-student: Student ->"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fn-for-student"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-student"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"student-name"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-student"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"student-email"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-student"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         283 4           0 0           0 46 0 17 3 25
#";; ListOfStudent Template"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; fn-for-los: ListOfStudent ->"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fn-for-los"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"fn-for-student"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"fn-for-los"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 6 #")))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 3"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; a BST is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;    false"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;    Coursenode"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; a Coursenode is a (make-coursenode Number String String ListOfStu"
 #"dent BST BST)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 10 #"coursenode"
0 0 24 3 2 #" ("
0 0 14 3 9 #"course-id"
0 0 24 3 1 #" "
0 0 14 3 5 #"title"
0 0 24 3 1 #" "
0 0 14 3 10 #"instructor"
0 0 24 3 1 #" "
0 0 14 3 8 #"students"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; interp: a BST represents a course tree where"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;    - false means an emtpy course tree"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;    - (make-coursenode ...) is a coursenode where"
0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";;    - course-id is split up between department and course and cont"
 #"ains the id of the course"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";;    - title is the title of the course"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";;    - instructor is the name of the instructor who teaches the cou"
 #"rse"
) 0 0 24 29 1 #"\n"
0 0 17 3 64
#";;    - students is a list of students who are taking the course"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;    - left is a left-subtree and always contains smaller course-id"
 #"s"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";;    - right is a right-subtree and always contains greater course-"
 #"ids"
) 0 0 24 29 1 #"\n"
0 0 17 3 37 #";; INVARIANT: for a given coursenode:"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;      course-id is > all course-ids in its left child"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";;      course-id is < all course-ids in its right child"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;      the same course-id never appears twice in the tree"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 4"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         169 4           0 0           0 27 0 24 3 14
#"              "
0 0 21 3 6 #"50.101"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 1 #"/"
0 0 24 3 6 #"      "
0 0 14 3 1 #"\\"
0 0 14 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 21 3 6 #"49.202"
0 0 24 3 4 #"    "
0 0 21 3 6 #"50.311"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 1 #"/"
0 0 24 3 6 #"      "
0 0 14 3 2 #"\\ "
0 0 24 3 8 #"        "
0 0 14 3 1 #"\\"
0 0 14 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 6 #"49.101"
0 0 24 3 3 #"   "
0 0 21 3 6 #"49.411"
0 0 24 3 4 #"    "
0 0 21 3 6 #"51.101"
0 0 24 3 3 #"   "
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"CALC"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"51.101"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Calculus 1\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Farhad\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ADV-DATA"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.311"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"Advanced Data Systems\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Glen\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 4 #"CALC"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ADV-CIRC"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.411"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"Advanced Circuitry\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Long\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"INTRO-TO-ELEC-ENG"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.101"
0 0 24 3 1 #" "
0 0 19 3 33 #"\"Intro to Electrical Engineering\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Johnson\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.202"
0 0 24 3 1 #" "
0 0 19 3 39 #"\"Technical Applications of Electricity\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"George\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 17 #"INTRO-TO-ELEC-ENG"
0 0 24 3 1 #" "
0 0 14 3 8 #"ADV-CIRC"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"INTRO-TO-PROGRAMMING"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Intro to Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 1 #" "
0 0 14 3 8 #"ADV-DATA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Intro to Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 1 #" "
0 0 14 3 8 #"ADV-DATA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 5"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         535 4           0 0           0 88 0 17 3 21
#";; fn-for-bst: BST ->"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fn-for-bst"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"coursenode?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 17 #"fn-for-coursenode"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"fn-for-coursenode"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 16 #"coursenode-title"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 21 #"coursenode-instructor"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"fn-for-los"
0 0 24 3 2 #" ("
0 0 14 3 19 #"coursenode-students"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"fn-for-bst"
0 0 24 3 2 #" ("
0 0 14 3 15 #"coursenode-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"fn-for-bst"
0 0 24 3 2 #" ("
0 0 14 3 16 #"coursenode-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 6 #")))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 6"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; any-taught-by?: BST String -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; consumes a binary search tree and the name of an instructor and"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";; produces true if any of the courses in the course database are ta"
 #"ught by the given instructor"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"any-taught-by?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #" "
0 0 14 3 10 #"instructor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"coursenode?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 21 #"coursenode-instructor"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 10 #"instructor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 14 #"any-taught-by?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"coursenode-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 10 #"instructor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 14 #"any-taught-by?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"coursenode-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 10 #"instructor"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; test cases"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"any-taught-by?"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; false coursenode produces false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"any-taught-by?"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Matthews\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; a non-existant teacher produces false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"any-taught-by?"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; a teacher in the first class of the tree produces true"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"any-taught-by?"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Farhad\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; a teacher in a class down the tree produces true"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"any-taught-by?"
0 0 24 3 1 #" "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 103
(
 #";; produces false because the teacher who is being searched for is n"
 #"ot in left branch of the COURSETREE"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 7"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; drop-student: BST Number String -> BST"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";; consumes a binary search tree, a course number, and the email add"
 #"ress of a student, and"
) 0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";; produces a binary search tree without the student with the given "
 #"email address from"
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";; the list of students enrolled in the given course"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"drop-student"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #" "
0 0 14 3 10 #"course-num"
0 0 24 3 1 #" "
0 0 14 3 5 #"email"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"coursenode?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 10 #"course-num"
0 0 24 3 2 #" ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 2 #" ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 16 #"coursenode-title"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 21 #"coursenode-instructor"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 17 #"take-away-student"
0 0 24 3 2 #" ("
0 0 14 3 19 #"coursenode-students"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 5 #"email"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 15 #"coursenode-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 16 #"coursenode-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                  [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 10 #"course-num"
0 0 24 3 2 #" ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 2 #" ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 16 #"coursenode-title"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 21 #"coursenode-instructor"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 19 #"coursenode-students"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 15 #"coursenode-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 12 #"drop-student"
0 0 24 3 2 #" ("
0 0 14 3 16 #"coursenode-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 10 #"course-num"
0 0 24 3 1 #" "
0 0 14 3 5 #"email"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                  [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 10 #"course-num"
0 0 24 3 2 #" ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 2 #" ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 16 #"coursenode-title"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 21 #"coursenode-instructor"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 19 #"coursenode-students"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 12 #"drop-student"
0 0 24 3 2 #" ("
0 0 14 3 15 #"coursenode-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 10 #"course-num"
0 0 24 3 1 #" "
0 0 14 3 5 #"email"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 16 #"coursenode-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; test cases"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"drop-student"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"  "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"bhsmith@wpi.edu\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; a false BST will produce false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"drop-student"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"jhyuen@wpi.edu\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Intro to Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 1 #" "
0 0 14 3 8 #"ADV-DATA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; an incorrect email produces the same BST"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"drop-student"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"bhsmith@wpi.edu\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Intro to Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 1 #" "
0 0 14 3 8 #"ADV-DATA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; a correct email produces a BST without the selected person"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"drop-student"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"jhyuen@wpi.edu\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Intro to Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 1 #" "
0 0 14 3 8 #"ADV-DATA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; a correct email down the tree produces a BST without the selected"
 #" person"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"drop-student"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.101"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"bhsmith@wpi.edu\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Intro to Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 83
(
 #"                                                                    "
 #"              ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.202"
0 0 24 3 1 #" "
0 0 19 3 39 #"\"Technical Applications of Electricity\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"George\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 100
(
 #"                                                                    "
 #"                               ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.101"
0 0 24 3 1 #" "
0 0 19 3 33 #"\"Intro to Electrical Engineering\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Johnson\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 99
(
 #"                                                                    "
 #"                               "
) 0 0 14 3 8 #"ADV-CIRC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 82
(
 #"                                                                    "
 #"              "
) 0 0 14 3 8 #"ADV-DATA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; a correct email down the tree produces a BST with the selected pe"
 #"rson"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"drop-student"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 21 3 6 #"51.101"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"lgteller@wpi.edu\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Intro to Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 83
(
 #"                                                                    "
 #"               "
) 0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 29 1 #"\n"
0 0 24 3 84
(
 #"                                                                    "
 #"               ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.311"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"Advanced Data Systems\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Glen\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 100
(
 #"                                                                    "
 #"                                "
) 0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 101
(
 #"                                                                    "
 #"                                ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"51.101"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Calculus 1\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Farhad\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; a correct email down the tree produces a BST with the selected pe"
 #"rson"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; take-away-student: ListOfStudent String -> ListOfStudent"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; consumes a list of students and an email and"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; produces a list without the student who belong to the email"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"take-away-student"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 1 #" "
0 0 14 3 5 #"email"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"student-email"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 3 #")) "
0 0 14 3 5 #"email"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 17 #"take-away-student"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 2 #") "
0 0 14 3 5 #"email"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 3 #") ("
0 0 14 3 17 #"take-away-student"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"alos"
0 0 24 3 2 #") "
0 0 14 3 5 #"email"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; test cases"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"take-away-student"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"jhyuen@wpi.edu\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; an empty list produces an empty list"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"take-away-student"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOS1"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"jhyuen@wpi.edu\""
0 0 24 3 2 #") "
0 0 14 3 4 #"LOS1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; a list of students with a non-existing email produces the same li"
 #"st"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"take-away-student"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOS1"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"bhsmith@wpi.edu\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";; a list of students with an existing email produces the same list "
 #"without a first person"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"take-away-student"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOS1"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"shbun@wpi.edu\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";; a list of students with an existing email produces the same list "
 #"without a second person"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 8"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; ListOfString is one of"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;    - empty"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;    - (cons String ListOfString)"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; interp: ListOfString consists of strings"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; list-titles-in-order-by-coursenum: BST -> ListOfString"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; consumes a binary search tree and"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; produces a list of the titles of the courses, sorted in order by "
 #"ascending order"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 33 #"list-titles-in-order-by-coursenum"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"coursenode?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 33 #"list-titles-in-order-by-coursenum"
0 0 24 3 2 #" ("
0 0 14 3 15 #"coursenode-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 16 #"coursenode-title"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 33 #"list-titles-in-order-by-coursenum"
0 0 24 3 2 #" ("
0 0 14 3 16 #"coursenode-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; test cases"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 33 #"list-titles-in-order-by-coursenum"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; a false BST produces an empty list"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 33 #"list-titles-in-order-by-coursenum"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 33 #"\"Intro to Electrical Engineering\""
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                   "
0 0 19 3 39 #"\"Technical Applications of Electricity\""
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                   "
0 0 19 3 20 #"\"Advanced Circuitry\""
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                   "
0 0 19 3 22 #"\"Intro to Programming\""
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                   "
0 0 19 3 23 #"\"Advanced Data Systems\""
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                   "
0 0 19 3 12 #"\"Calculus 1\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; Goes through the entire COURSETREE and arranges it in order by co"
 #"urse-num"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 33 #"list-titles-in-order-by-coursenum"
0 0 24 3 1 #" "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 33 #"\"Intro to Electrical Engineering\""
0 0 24 3 1 #" "
0 0 19 3 39 #"\"Technical Applications of Electricity\""
0 0 24 3 2 #"  "
0 0 19 3 20 #"\"Advanced Circuitry\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; take a part of the COURSETREE and arranges it in order by course-"
 #"num"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 33 #"list-titles-in-order-by-coursenum"
0 0 24 3 1 #" "
0 0 14 3 4 #"CALC"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Calculus 1\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";; takes a leaf from the COURSETREE and produces it becuase there ar"
 #"e no courses to the left or to the righ"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 9"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; add-course: BST Number String String -> BST"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";; consumes a binary search tree, a course number, a course title, a"
 #"nd the name of the instructor, and"
) 0 0 24 29 1 #"\n"
0 0 17 3 57 #";; produces a binary search tree the same as the original"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; except that a new course with the given information has been adde"
 #"d to the tree"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-course"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #" "
0 0 14 3 10 #"course-num"
0 0 24 3 1 #" "
0 0 14 3 5 #"title"
0 0 24 3 1 #" "
0 0 14 3 10 #"instructor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 14 3 10 #"course-num"
0 0 24 3 1 #" "
0 0 14 3 5 #"title"
0 0 24 3 1 #" "
0 0 14 3 10 #"instructor"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 21 #")]                   "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"coursenode?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 9 #"go-right?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #" "
0 0 14 3 10 #"course-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 15 #"make-coursenode"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 16 #"coursenode-title"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 21 #"coursenode-instructor"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 19 #"coursenode-students"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 15 #"coursenode-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"add-course"
0 0 24 3 2 #" ("
0 0 14 3 16 #"coursenode-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 10 #"course-num"
0 0 24 3 1 #" "
0 0 14 3 5 #"title"
0 0 24 3 1 #" "
0 0 14 3 10 #"instructor"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                  [("
0 0 14 3 8 #"go-left?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #" "
0 0 14 3 10 #"course-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 15 #"make-coursenode"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 16 #"coursenode-title"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 21 #"coursenode-instructor"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 19 #"coursenode-students"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"add-course"
0 0 24 3 2 #" ("
0 0 14 3 15 #"coursenode-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 10 #"course-num"
0 0 24 3 1 #" "
0 0 14 3 5 #"title"
0 0 24 3 1 #" "
0 0 14 3 10 #"instructor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 16 #"coursenode-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; test cases"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-course"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 6 #"58.101"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 10 #"Underwater"
0 0 19 3 1 #" "
0 0 19 3 6 #"Basket"
0 0 19 3 9 #" Weaving\""
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Salminen\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"58.101"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 10 #"Underwater"
0 0 19 3 1 #" "
0 0 19 3 6 #"Basket"
0 0 19 3 9 #" Weaving\""
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Salminen\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; a false bst produces the given bst"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-course"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 21 3 6 #"48.101"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Intro"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 10 #" Robotics\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Neeman\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Intro"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 13 #" Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.202"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 9 #"Technical"
0 0 19 3 1 #" "
0 0 19 3 12 #"Applications"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 13 #" Electricity\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"George\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 99
(
 #"                                                                    "
 #"                              ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.101"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Intro"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 10 #"Electrical"
0 0 19 3 13 #" Engineering\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Johnson\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 116
(
 #"                                                                    "
 #"                                               ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"48.101"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Intro"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 10 #" Robotics\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Neeman\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 115
(
 #"                                                                    "
 #"                                               "
) 0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 98
(
 #"                                                                    "
 #"                              "
) 0 0 14 3 8 #"ADV-CIRC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 81
(
 #"                                                                    "
 #"             "
) 0 0 14 3 8 #"ADV-DATA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; a new bst is produced on the far left of the tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-course"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 21 3 6 #"51.202"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Calculus"
0 0 19 3 3 #" 2\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Far\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Intro"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 13 #" Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 81
(
 #"                                                                    "
 #"             "
) 0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 29 1 #"\n"
0 0 24 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.311"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Advanced"
0 0 19 3 1 #" "
0 0 19 3 4 #"Data"
0 0 19 3 9 #" Systems\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Glen\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 98
(
 #"                                                                    "
 #"                              "
) 0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 99
(
 #"                                                                    "
 #"                              ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"51.101"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Calculus"
0 0 19 3 3 #" 1\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Farhad\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 115
(
 #"                                                                    "
 #"                                               "
) 0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 116
(
 #"                                                                    "
 #"                                               ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"51.202"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Calculus"
0 0 19 3 3 #" 2\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Far\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; a new bst is produced on the far right of the tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-course"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.301"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 12 #"Fundamentals"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 12 #" Resistance\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Neeman\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Intro"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 13 #" Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 101
(
 #"                                                                    "
 #"                                ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.202"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 9 #"Technical"
0 0 19 3 1 #" "
0 0 19 3 12 #"Applications"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 13 #" Electricity\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"George\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 117
(
 #"                                                                    "
 #"                                                 "
) 0 0 14 3 17 #"INTRO-TO-ELEC-ENG"
0 0 24 29 1 #"\n"
0 0 24 3 118
(
 #"                                                                    "
 #"                                                 ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.411"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Advanced"
0 0 19 3 11 #" Circuitry\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Long\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 135
(
 #"                                                                    "
 #"                                                                  ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"49.301"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 12 #"Fundamentals"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 12 #" Resistance\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Neeman\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 134
(
 #"                                                                    "
 #"                                                                  "
) 0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 100
(
 #"                                                                    "
 #"                                "
) 0 0 14 3 8 #"ADV-DATA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; a new bst is produced on the middle left of the tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-course"
0 0 24 3 1 #" "
0 0 14 3 10 #"COURSETREE"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.201"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 10 #"Artificial"
0 0 19 3 14 #" Intelligence\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Greg\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Intro"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 13 #" Programming\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Hamel\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"BOB"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 81
(
 #"                                                                    "
 #"             "
) 0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 29 1 #"\n"
0 0 24 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.311"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Advanced"
0 0 19 3 1 #" "
0 0 19 3 4 #"Data"
0 0 19 3 9 #" Systems\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Glen\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 99
(
 #"                                                                    "
 #"                              ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.201"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 10 #"Artificial"
0 0 19 3 14 #" Intelligence\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Greg\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 98
(
 #"                                                                    "
 #"                              "
) 0 0 14 3 4 #"CALC"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; a new bst is produced on the middle right of the tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-course"
0 0 24 3 1 #" "
0 0 14 3 8 #"ADV-DATA"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.201"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 24 #"Artificial Intelligence\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Greg\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.311"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Advanced"
0 0 19 3 1 #" "
0 0 19 3 13 #"Data Systems\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Glen\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"LUKE"
0 0 24 3 1 #" "
0 0 14 3 5 #"SARAH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 82
(
 #"                                                                    "
 #"             ("
) 0 0 14 3 15 #"make-coursenode"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.201"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 24 #"Artificial Intelligence\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Greg\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 98
(
 #"                                                                    "
 #"                              "
) 0 0 14 3 4 #"CALC"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; a new bst is added to the immidiate left of the preexisting cours"
 #"e provided "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; go-right?: BST Number -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; consumes a binary search tree and a course number and"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; produces true if the course number is greather than the coursenod"
 #"e's coursenumber"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"go-right?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #" "
0 0 14 3 9 #"coursenum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"coursenode?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 9 #"coursenum"
0 0 24 3 2 #" ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; test cases"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"go-right?"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; a false bst produces false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"go-right?"
0 0 24 3 1 #" "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; coursenum is greater than bst produces true"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"go-right?"
0 0 24 3 1 #" "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 1 #" "
0 0 21 3 6 #"48.101"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; coursenum is less than bst produces false"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";;cannot make a test case for equal numbers because courses cannot h"
 #"ave matching course-nums"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; go-left?: BST Number -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; consumes a binary search tree and a course number and"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; produces true if the course number is less than the coursenode's "
 #"coursenumber"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"go-left?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 1 #" "
0 0 14 3 9 #"coursenum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"coursenode?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 9 #"coursenum"
0 0 24 3 2 #" ("
0 0 14 3 20 #"coursenode-course-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"abst"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; test cases"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"go-left?"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; a false bst produces false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"go-left?"
0 0 24 3 1 #" "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 1 #" "
0 0 21 3 6 #"50.101"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; coursenum is greater than bst produces false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"go-left?"
0 0 24 3 1 #" "
0 0 14 3 13 #"TECH-APP-ELEC"
0 0 24 3 1 #" "
0 0 21 3 6 #"48.101"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; coursenum is less than bst produces true"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";;cannot make a test case for equal numbers because courses cannot h"
 #"ave matching course-nums"
) 0           0
